p next->_state
quit
b ProcessManager::_schedule(ProcessState*) 
c
n
p next->_state
n
si
quit
b ProcessManager::_schedule(ProcessState*) 
c
n
p next->_table 
p *next->_table 
n
quit
b ProcessManager::_schedule(ProcessState*) 
c
n
si
p eax
p $eax
p *$eax
p *(PageTable*)$eax
si
p $cr3
p *$cr3
p $cr3
p $eax
p $cr3
p $esp
quit
b ProcessManager::_schedule(ProcessState*) 
c
n
si
n
si
quit
c
quit
b ProcessManager::_schedule(ProcessState*) 
c
n
b printNum(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) 
c
si
n
si
quit
watch 0xc0200259
watch *0xc0200259
rwatch *0xc0200259
p kernel
c
quit
watch *0xc0200259
rwatch *0xc0200259
p kernel
c
quit
watch *0xc0200259
rwatch *0xc0200259
b kernel
c
disassemble 0xc0000259
b syscall
c
quit
b printNum(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) 
c
disassemble 0xc0000259
si
quit 
b fork() 
c
n
si
n
si
n
si
n
si
n
quit
b ProcessManager::fork(ProcessState*) 
c
n
si
n
p _usedStackSegment 
p parent->_usedStackSegment 
p childProcess->_usedStackSegment 
n
quit
b Process::_fork(Process*) 
c
n
quit
b Process::_fork(Process*) 
c
n
quit
b Process::_fork(Process*) 
c
n
si
quit
b ProcessManager::fork(ProcessState*) 
c
n
si
b ProcessManager::fork(ProcessState*) 
c
n
n
si
n
p emptyAddr
p emptyAddrStart 
p/x emptyAddrStart 
p/x emptyAddrEnd 
p/x childProcess->_stackSegment
n
p/x childProcess->_stackSegment
p/x childProcess->_usedStackSegment
n
x/20x 0x7ff000
p emptySlot 
p initStackFrames 
p initStackFrames[0]
p *initStackFrames[0]
p/x *initStackFrames[0]
x/20x 0xc0D25000
x/40x 0xc0D25000
n
x/40x 0xc0c25000
p parentProcess->_usedStackSegment 
p/x parentProcess->_usedStackSegment 
x/20x 0xbfffd000
x/4096x 0xbfffd000
x/4096x 0xc0c25000
n
p/x childProcess->_state
quit
b Process::_fork(Process*) 
c
n
p parentProcess->_state
p/x parentProcess->_state
quit
b syscall
c
si
quit
b ProcessManager::fork(ProcessState*) 
c
n
p/x parent->_state
n
p/x parent->_state
p/x child->_state
c
b __syscall_sleep__(ProcessState*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) 
c
p time
n
p time
n
p time
b 30
c
quit
b userlib::print
c
n
p string
p *string
p string
n
p ch
n
p data
p/x data
n
n
p position 
b
del 2
c
n
si
n
si
n
si
p al
p $al
p port
p _port
p _val
p val
quit
b syscall_sleep(unsigned int) 
c
b __syscall_sleep__(ProcessState*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) 
c
b 30
c
p time
p time
quit
b syscall_sleep(unsigned int) 
c
n
p time
si
n
si
si
n
p vec
p p0
si
n
p time
b
c
p time
c
p time
c
p time
c
p time
c
p time
n
c
p time
quit
b syscall_s
b syscall_sleep(unsigned int) 
c
b __syscall_sleep__(ProcessState*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) 
n
c
p time
c
p time
c
p time
c
p time
quit
